@Model ErrorBackpropagationMVC.Models.LearningFormModel

@{
    ViewBag.Title = "Learning results";
}

<h2>Learning results</h2>
<p>Neurons in layers: @Model.layers</p>
<p>Datasheet used: @Model.fileName</p>
<p>Learning parameter: @Model.learningParameter</p>
<p>Output tolerance: @Model.errorTolerance</p>
<p>Learning success requirement: @Model.successRate</p>
<br>

<img src="@Url.Action("RatesChart", "LearningForm")"/>

<br><br>
<h3>Contingency table for learning</h3>
<table title="Contingency table for learning" border="1">
    <tr>
        <th>ev/x</th>
        @{ 
            char name = 'a';
            for (int i = 0; i < ViewBag.LearningTable[0].Length; i++)
            {
                <th>@(name++)</th>
            }
        }
    </tr>
    @{
        name = 'a';
        for (int i = 0; i < ViewBag.LearningTable.Length; i++)
        {
            <tr>
                <th>@(name++)</th>
                @{ 
                    for (int j = 0; j < ViewBag.LearningTable[i].Length; j++)
                    {
                        <td>@ViewBag.LearningTable[i][j]</td>
                    }
                }
            </tr>
        }
    }
</table>
<br><br>
<h3>Contingency table for testing</h3>
<table title="Contingency table for testing" border="1">
    <tr>
        <th>ev/x</th>
        @{
            name = 'a';
            for (int i = 0; i < ViewBag.LearningTable[0].Length; i++)
            {
                <th>@(name++)</th>
            }
        }
    </tr>
    @{
        name = 'a';
        for (int i = 0; i < ViewBag.TestingTable.Length; i++)
        {
            <tr>
                <th>@(name++)</th>
                @{
                    for (int j = 0; j < ViewBag.TestingTable[i].Length; j++)
                    {
                        <td>@ViewBag.TestingTable[i][j]</td>
                    }
                }
            </tr>
        }
    }
</table>


